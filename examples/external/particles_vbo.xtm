;;; particles.xtm -- A little particle example

;; Author: Andrew Sorensen
;; Keywords: extempore
;; Required dylibs:

;;; Commentary:

;; Multicoloured stars

;;; Code:

(load "libs/external/opengl.xtm")
(load "libs/external/shaders.xtm")
(load "libs/external/particles_vbo.xtm")

(define ctx (gl:make-ctx ":0" #f 0.0 0.0 1024.0 768.0))
(init-all-shaders)

(bind-val texture1 i32 0)

(bind-func load-tex
  (lambda (id)
    (let ((t (soil-load-tex-sqr "star.png" id)))      
      (set! texture1 t)
      (printf "texture: %d\n" texture1)
      void)))

;; 0 meaning load texture into new id
(load-tex 0)

;; init particle system
(bind-func init-psys
  (lambda (psys:psystem*)
    (let ((i:i32 0))
      (dotimes (i 5000)
    	(psystem-set-particle psys i 0.0 0.0 
    			      (dtof (+ 5.0 (* 50.0 (random))))
    			      (* 0.01 (- (dtof (random)) .5)) ; xvelocity
    			      (* 0.01 (- (dtof (random)) .5)) ; yvelocity
    			      (dtof (random))
			      (dtof (random))
			      (dtof (random))
			      1.0 ;; (dtof (random))
			      100000)))
    void))

;; gl-code 	   
(bind-func gl-loop
  (let ((psys (psystem_create 500000 texture1)))
    (init-psys psys)
    (lambda (time:double)
      (glClearColor 0.0 0.0 0.0 1.0)
      (glClear (+ GL_DEPTH_BUFFER_BIT GL_COLOR_BUFFER_BIT))
      (glLoadIdentity)
      (psystem_draw psys)
      (psystem_update psys)
      void)))



;; gl callback loop
(define loop
  (lambda (time)
    (if (< time (now))
	(println 'late (- (now) time)))
    (gl-loop time)
    (gl:swap-buffers ctx)
    (callback (+ time 100) 'loop (+ time 1500))))

(begin (sys:sleep 48000)
       (loop (now)))
