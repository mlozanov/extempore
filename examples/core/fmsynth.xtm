;;; fmsynth.xtm -- a simple little fmsynth example

;; Author: Andrew Sorensen
;; Keywords: extempore

;;; Commentary:

;;; Code:

;; load the core/instruments library, which provides (among other
;; things) the define-instrument macro
(load "libs/core/instruments.xtm")
(load "libs/core/pc_ivl.xtm")

(llvm:export-module "/tmp/audio.bc")

(bind-func dsp:[double,double,double,double,double*]*
  (lambda (in time chan dat)
    (cond ((< chan 2.0)
	   (+ (* 2.0 (simplefm in time chan dat))
              (* 1.0 (fmpad in time chan dat))))
	  (else 0.0))))

(dsp:set! dsp)

(play-note (now) simplefm (random 60 90) 80 44100)

(define root 0)

;; first let's play with synth
(define l1
  (lambda (beat dur cell)
    (play simplefm (pc:quantize (car cell) (pc:scale root 'aeolian))
          (cosr 90 10 2) (* dur .2) 0.1 10.0)
    (callback (*metro* (+ beat (* dur .5))) 'l1
	      (+ beat dur)
              dur
              (rotate cell 1))))


(l1 (*metro* 'get-beat 4) 1/4 '(60 63 62 67 72 65 84 77 65 67)) ;; start one playing quavers

(define l2
  (lambda (beat dur)
    (set! root (modulo (random '(0 2 5 7)) 12))
    (map (lambda (p)
           (play fmpad p 80 dur 1.0 1.0))
         (pc:make-chord 40 80 4 (pc:chord root '-7)))
    (callback (*metro* (+ beat (* .95 dur))) 'l2 (+ beat dur)
              dur)))

(l2 (*metro* 'get-beat 4) 8 0)
